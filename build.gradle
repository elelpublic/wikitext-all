/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'lars' at '04.11.14 11:21' with Gradle 1.12
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.12/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'ivy-publish'

group = 'org.eclipse.mylyn'
version = '0.1-SNAPSHOT'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()

}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile (
    	'org.slf4j:slf4j-api:1.7.5',
    	'com.google.guava:guava:18.0',
    	'org.jsoup:jsoup:1.8.1',
    	'org.apache.ant:ant:1.9.4',
    	//'org.apache.maven:maven-core:3.2.3',
    	'org.apache.maven:maven-plugin-api:3.2.3',
    	'org.mockito:mockito-all:1.10.8',
    	'org.osgi:org.osgi.core:5.0.0'
    	
    	
   	)

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
}

sourceSets {
  main {
    java {
		srcDirs = [
		  'src/org.eclipse.mylyn.wikitext.confluence.core/src'
		, 'src/org.eclipse.mylyn.wikitext.core/src'
		, 'src/org.eclipse.mylyn.wikitext.core.ant/src'
		, 'src/org.eclipse.mylyn.wikitext.core.maven/src/main/java'
		, 'src/org.eclipse.mylyn.wikitext.core.osgi/src'
		, 'src/org.eclipse.mylyn.wikitext.creole.core/src'
		, 'src/org.eclipse.mylyn.wikitext.html.core/src'
		, 'src/org.eclipse.mylyn.wikitext.markdown.core/src'
		, 'src/org.eclipse.mylyn.wikitext.mediawiki.core/src'
		, 'src/org.eclipse.mylyn.wikitext.textile.core/src'
		, 'src/org.eclipse.mylyn.wikitext.tracwiki.core/src'
		, 'src/org.eclipse.mylyn.wikitext.twiki.core/src'
		]
    }
  }
  test {
    java {
		srcDirs = [
		  'src/org.eclipse.mylyn.wikitext.core.osgi.tests/src'
		, 'src/org.eclipse.mylyn.wikitext.core.tests/src'
		, 'src/org.eclipse.mylyn.wikitext.core.maven/src/test/java'
		, 'src/org.eclipse.mylyn.wikitext.core.tests/src'
		]
    }
  }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'src'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
	publications {
		ivyJava( IvyPublication ) {
			from components.java
			artifact(sourcesJar) {
                type "source"
                conf "runtime"
            }
		}
	}
	repositories {
		ivy {
			// our legacy team repo
	    	url 'file://s/repository/maven'
	    	layout 'pattern' , {
	            artifact '[organisation].[module]/[type]s/[artifact]-[revision](.[ext])'
	        }
	    }
	}
}
